import { CloudComponentDetailed } from "../../../../../models/deployment.model";

export const ALL_COMPONENTS_LIST: CloudComponentDetailed[] = [
    {
      id: 'ecs-fargate',
      name: 'ECS Fargate Service',
      description: 'Containerized service deployed with AWS ECS Fargate',
      category: 'Compute',
      provider: 'aws',
      icon: 'pi pi-cog',
      pricing: 'Variable (based on CPU & memory)',
      options: [
        {
          name: 'cpu',
          label: 'CPU Units',
          type: 'number',
          required: true,
          defaultValue: 256,
        },
        {
          name: 'memory',
          label: 'Memory (MB)',
          type: 'number',
          required: true,
          defaultValue: 512,
        },
        {
          name: 'desired_count',
          label: 'Desired Count',
          type: 'number',
          required: true,
          defaultValue: 1,
        },
        {
          name: 'assign_public_ip',
          label: 'Assign Public IP',
          type: 'toggle',
          required: false,
          defaultValue: false,
        },
      ],
    },
    {
      id: 'cloudfront',
      name: 'CloudFront CDN',
      description: 'Content Delivery Network to distribute content globally',
      category: 'Networking',
      provider: 'aws',
      icon: 'pi pi-globe',
      pricing: 'Variable (based on traffic)',
      options: [
        {
          name: 'enable_cdn',
          label: 'Enable CDN',
          type: 'toggle',
          required: false,
          defaultValue: false,
        },
        {
          name: 'price_class',
          label: 'Price Class',
          type: 'select',
          required: false,
          options: [
            { label: 'PriceClass_100 (US, Canada, Europe)', value: 'PriceClass_100' },
            { label: 'PriceClass_200 (Most locations)', value: 'PriceClass_200' },
            { label: 'PriceClass_All (All edge locations)', value: 'PriceClass_All' },
          ],
        },
      ],
    },
    {
      id: 'waf',
      name: 'AWS WAF',
      description: 'Web Application Firewall',
      category: 'Security',
      provider: 'aws',
      icon: 'pi pi-shield',
      pricing: 'Variable (per rule and request)',
      options: [
        {
          name: 'enable_waf',
          label: 'Enable WAF',
          type: 'toggle',
          required: false,
          defaultValue: false,
        },
      ],
    },
    {
      id: 'rds',
      name: 'RDS / Aurora Database',
      description: 'Managed relational databases including Aurora',
      category: 'Database',
      provider: 'aws',
      icon: 'pi pi-database',
      pricing: '$0.017/hour (starting)',
      options: [
        {
          name: 'engine',
          label: 'Engine',
          type: 'select',
          required: true,
          options: [
            { label: 'RDS MySQL', value: 'rds-mysql' },
            { label: 'RDS PostgreSQL', value: 'rds-postgres' },
            { label: 'Aurora MySQL', value: 'aurora-mysql' },
            { label: 'Aurora PostgreSQL', value: 'aurora-postgres' },
          ],
        },
        {
          name: 'instance_class',
          label: 'Instance Class',
          type: 'text',
          required: true,
          defaultValue: 'db.t3.micro',
        },
        {
          name: 'allocated_storage',
          label: 'Allocated Storage (GB)',
          type: 'number',
          required: true,
          defaultValue: 20,
        },
        {
          name: 'multi_az',
          label: 'Multi-AZ Deployment',
          type: 'toggle',
          required: false,
          defaultValue: false,
        },
      ],
    },
    {
      id: 'dynamodb',
      name: 'DynamoDB',
      description: 'Fully managed NoSQL database',
      category: 'Database',
      provider: 'aws',
      icon: 'pi pi-th-large',
      pricing: 'Variable (on-demand or provisioned)',
      options: [
        {
          name: 'read_capacity',
          label: 'Read Capacity Units',
          type: 'number',
          required: false,
          defaultValue: 5,
        },
        {
          name: 'write_capacity',
          label: 'Write Capacity Units',
          type: 'number',
          required: false,
          defaultValue: 5,
        },
      ],
    },
  ];